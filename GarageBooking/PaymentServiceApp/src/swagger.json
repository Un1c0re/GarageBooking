{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PaymentDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"orderId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"orderId",
					"userId",
					"amount",
					"status",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaymentStatus": {
				"type": "string",
				"enum": [
					"waiting_for_capture",
					"pending",
					"succeeded",
					"canceled"
				],
				"nullable": false
			},
			"IAmount": {
				"properties": {
					"value": {
						"type": "string"
					},
					"currency": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaymentMethodType": {
				"type": "string",
				"enum": [
					"bank_card",
					"apple_pay",
					"google_pay",
					"yoo_money",
					"qiwi",
					"webmoney",
					"sberbank",
					"alfabank",
					"tinkoff_bank",
					"b2b_sberbank",
					"sbp",
					"mobile_balance",
					"cash",
					"installments"
				]
			},
			"IVatDataType": {
				"type": "string",
				"enum": [
					"untaxed",
					"calculated",
					"mixed"
				]
			},
			"IVatData": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/IVatDataType"
					},
					"amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"rate": {
						"type": "string"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaymentMethodData": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/IPaymentMethodType"
					},
					"login": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"payment_purpose": {
						"type": "string"
					},
					"vat_data": {
						"$ref": "#/components/schemas/IVatData"
					},
					"card": {
						"properties": {
							"csc": {
								"type": "string"
							},
							"cardholder": {
								"type": "string"
							},
							"expiry_year": {
								"type": "string"
							},
							"expiry_month": {
								"type": "string"
							},
							"number": {
								"type": "string"
							}
						},
						"required": [
							"csc",
							"cardholder",
							"expiry_year",
							"expiry_month",
							"number"
						],
						"type": "object"
					},
					"payment_data": {
						"type": "string"
					},
					"payment_method_token": {
						"type": "string"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRecipient": {
				"properties": {
					"account_id": {
						"type": "string"
					},
					"gateway_id": {
						"type": "string"
					}
				},
				"required": [
					"gateway_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConfirmationType": {
				"type": "string",
				"enum": [
					"embedded",
					"external",
					"qr",
					"redirect"
				]
			},
			"IConfirmation": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/IConfirmationType"
					},
					"locale": {
						"type": "string"
					},
					"confirmation_token": {
						"type": "string"
					},
					"confirmation_data": {
						"type": "string"
					},
					"confirmation_url": {
						"type": "string"
					},
					"enforce": {
						"type": "boolean"
					},
					"return_url": {
						"type": "string"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPassenger": {
				"properties": {
					"first_name": {
						"type": "string"
					},
					"last_name": {
						"type": "string"
					}
				},
				"required": [
					"first_name",
					"last_name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaymentLeg": {
				"properties": {
					"departure_airport": {
						"type": "string"
					},
					"destination_airport": {
						"type": "string"
					},
					"departure_date": {
						"type": "string"
					},
					"carrier_code": {
						"type": "string"
					}
				},
				"required": [
					"departure_airport",
					"destination_airport",
					"departure_date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAirline": {
				"properties": {
					"account_id": {
						"type": "string"
					},
					"ticket_number": {
						"type": "string"
					},
					"booking_reference": {
						"type": "string"
					},
					"passengers": {
						"items": {
							"$ref": "#/components/schemas/IPassenger"
						},
						"type": "array"
					},
					"legs": {
						"items": {
							"$ref": "#/components/schemas/IPaymentLeg"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IReceiptStatus": {
				"type": "string",
				"enum": [
					"pending",
					"succeeded",
					"canceled"
				],
				"nullable": false
			},
			"ITransfer": {
				"properties": {
					"account_id": {
						"type": "string"
					},
					"amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"status": {
						"$ref": "#/components/schemas/IPaymentStatus"
					},
					"platform_fee_amount": {
						"$ref": "#/components/schemas/IAmount"
					}
				},
				"required": [
					"account_id",
					"amount",
					"platform_fee_amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICheckoutCustomer": {
				"properties": {
					"full_name": {
						"type": "string"
					},
					"inn": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IPaymentSubject": {
				"type": "string",
				"enum": [
					"commodity",
					"excise",
					"job",
					"service",
					"gambling_bet",
					"gambling_prize",
					"lottery",
					"lottery_prize",
					"intellectual_activity",
					"payment",
					"agent_commission",
					"property_right",
					"non_operating_gain",
					"insurance_premium",
					"sales_tax",
					"resort_fee",
					"composite",
					"another"
				]
			},
			"IPaymentMode": {
				"type": "string",
				"enum": [
					"full_prepayment",
					"partial_prepayment",
					"advance",
					"full_payment",
					"partial_payment",
					"credit",
					"credit_payment"
				]
			},
			"Pick_IItem.Exclude_keyofIItem.supplier-or-agent_type__": {
				"properties": {
					"description": {
						"type": "string"
					},
					"quantity": {
						"type": "string"
					},
					"amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"vat_code": {
						"type": "number",
						"format": "double"
					},
					"payment_subject": {
						"$ref": "#/components/schemas/IPaymentSubject"
					},
					"payment_mode": {
						"$ref": "#/components/schemas/IPaymentMode"
					},
					"product_code": {
						"type": "string"
					},
					"country_of_origin_code": {
						"type": "string"
					},
					"customs_declaration_number": {
						"type": "string"
					},
					"excise": {
						"type": "string"
					}
				},
				"required": [
					"description",
					"quantity",
					"amount",
					"vat_code"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IItem.supplier-or-agent_type_": {
				"$ref": "#/components/schemas/Pick_IItem.Exclude_keyofIItem.supplier-or-agent_type__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IItemWithoutData": {
				"$ref": "#/components/schemas/Omit_IItem.supplier-or-agent_type_"
			},
			"IReceipt": {
				"properties": {
					"customer": {
						"$ref": "#/components/schemas/ICheckoutCustomer"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/IItemWithoutData"
						},
						"type": "array"
					},
					"tax_system_code": {
						"type": "number",
						"format": "double"
					},
					"phone": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Payment": {
				"properties": {
					"id": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/IPaymentStatus"
					},
					"paid": {
						"type": "boolean"
					},
					"amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"income_amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"refunded_amount": {
						"$ref": "#/components/schemas/IAmount"
					},
					"created_at": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"expires_at": {
						"type": "string"
					},
					"captured_at": {
						"type": "string"
					},
					"metadata": {},
					"payment_token": {
						"type": "string"
					},
					"payment_method_id": {
						"type": "string"
					},
					"payment_method_data": {
						"$ref": "#/components/schemas/IPaymentMethodData"
					},
					"payment_method": {
						"properties": {
							"account_number": {
								"type": "string"
							},
							"phone": {
								"type": "string"
							},
							"vat_data": {
								"$ref": "#/components/schemas/IVatData"
							},
							"payment_purpose": {
								"type": "string"
							},
							"payer_bank_details": {
								"properties": {
									"account": {
										"type": "string"
									},
									"bank_bik": {
										"type": "string"
									},
									"bank_branch": {
										"type": "string"
									},
									"bank_name": {
										"type": "string"
									},
									"kpp": {
										"type": "string"
									},
									"inn": {
										"type": "string"
									},
									"address": {
										"type": "string"
									},
									"short_name": {
										"type": "string"
									},
									"full_name": {
										"type": "string"
									}
								},
								"required": [
									"account",
									"bank_bik",
									"bank_branch",
									"bank_name",
									"kpp",
									"inn",
									"address",
									"short_name",
									"full_name"
								],
								"type": "object"
							},
							"login": {
								"type": "string"
							},
							"title": {
								"type": "string"
							},
							"card": {
								"properties": {
									"source": {
										"type": "string"
									},
									"issuer_name": {
										"type": "string"
									},
									"issuer_country": {
										"type": "string"
									},
									"card_type": {
										"type": "string"
									},
									"expiry_year": {
										"type": "string"
									},
									"expiry_month": {
										"type": "string"
									},
									"last4": {
										"type": "string"
									},
									"first6": {
										"type": "string"
									}
								},
								"required": [
									"card_type",
									"expiry_year",
									"expiry_month",
									"last4",
									"first6"
								],
								"type": "object"
							},
							"saved": {
								"type": "boolean"
							},
							"id": {
								"type": "string"
							},
							"type": {
								"$ref": "#/components/schemas/IPaymentMethodType"
							}
						},
						"required": [
							"saved",
							"id",
							"type"
						],
						"type": "object"
					},
					"recipient": {
						"$ref": "#/components/schemas/IRecipient"
					},
					"confirmation": {
						"$ref": "#/components/schemas/IConfirmation"
					},
					"save_payment_method": {
						"type": "boolean"
					},
					"capture": {
						"type": "boolean"
					},
					"client_ip": {
						"type": "string"
					},
					"airline": {
						"$ref": "#/components/schemas/IAirline"
					},
					"refundable": {
						"type": "boolean"
					},
					"test": {
						"type": "boolean"
					},
					"receipt_registration": {
						"$ref": "#/components/schemas/IReceiptStatus"
					},
					"cancellation_details": {
						"properties": {
							"reason": {
								"type": "string"
							},
							"party": {
								"type": "string"
							}
						},
						"required": [
							"reason",
							"party"
						],
						"type": "object"
					},
					"authorization_details": {
						"properties": {
							"rrn": {
								"type": "string"
							},
							"auth_code": {
								"type": "string"
							}
						},
						"required": [
							"rrn",
							"auth_code"
						],
						"type": "object"
					},
					"transfers": {
						"items": {
							"$ref": "#/components/schemas/ITransfer"
						},
						"type": "array"
					},
					"receipt": {
						"$ref": "#/components/schemas/IReceipt"
					},
					"merchant_customer_id": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"status",
					"paid",
					"amount",
					"income_amount",
					"refunded_amount",
					"created_at",
					"description",
					"expires_at",
					"captured_at",
					"metadata",
					"payment_token",
					"payment_method_id",
					"payment_method_data",
					"payment_method",
					"recipient",
					"confirmation",
					"save_payment_method",
					"capture",
					"client_ip",
					"airline",
					"refundable",
					"test",
					"receipt_registration",
					"cancellation_details",
					"authorization_details",
					"transfers",
					"receipt"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "payment-service",
		"version": "1.0.0",
		"description": "Payment microservice for garage rental app",
		"contact": {}
	},
	"paths": {
		"/payment": {
			"get": {
				"operationId": "GetPayments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PaymentDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreatePayment",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Payment"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PaymentDto"
							}
						}
					}
				}
			}
		},
		"/payment/notifications": {
			"post": {
				"operationId": "HandleNotification",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {
											"type": "string"
										}
									},
									"required": [
										"status"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PaymentDto"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}